package {	// import stuff	import flash.display.Bitmap;	import flash.display.Sprite;	import flash.events.Event;	import flash.utils.getDefinitionByName;		// import box2d	import Box2D.Dynamics.Joints.*;	import Box2D.Dynamics.*;	import Box2D.Collision.*;	import Box2D.Collision.Shapes.*;	import Box2D.Common.Math.*;	// import the sprite data	import PhysicsData;		public class Main extends Sprite {		public var nextSprite:Number=10;		// create an object containing the shape data		public var physicsData:PhysicsData = new PhysicsData();		// create the box2d world, set up gravity		public var world:b2World=new b2World(new b2Vec2(0,10.0),true);				public function Main():void {			// Grab the bitmap from the compiled resources			var artClass:Class = getDefinitionByName("floor") as Class;			// Creat a display object to add to the stage			var bitmap:Bitmap = new Bitmap(new artClass(0, 0), "auto", true);			// create a physics body from the physics data structure			var body:b2Body=physicsData.createBody("floor",												   world,												   b2Body.b2_staticBody,												   bitmap);							// set the position of the sprite			body.SetPositionAndAngle(						new b2Vec2(0,337/physicsData.ptm_ratio), 0);							// add the sprite to the scene			addChild(bitmap);			// add an event listener to update sprite's from			// physics data			addEventListener(Event.ENTER_FRAME, update, false, 0, true);		}		// this function adds new sprites to the scene		public function addNewSprites():void {			// only add sprites every 30th frame			nextSprite--;			if(nextSprite > 0)			{				return;			}			nextSprite = 30;			// names of the items / sprites we use			var items:Array=["hamburger",							 "drink",							 "icecream",							 "icecream2",							 "icecream3"];							// choose a random object			var name:String=items[Math.floor(Math.random()*items.length)];							// Grab the bitmap from the compiled resources			var artClass:Class = getDefinitionByName(name) as Class;			// Creat a display object to add to the stage			var bitmap:Bitmap = new Bitmap(new artClass(0, 0), "auto", true);						// create a physics body from the physics data structure			var body:b2Body=physicsData.createBody(name,												   world,												   b2Body.b2_dynamicBody,												   bitmap);							// set a random start position			body.SetPositionAndAngle(new b2Vec2(Math.random()*14,-2), 0);							// add the sprite to the scene			addChild(bitmap);		}		// this function runs the world simulation		// and adjusts the sprites according to the positions		// of the objects in the simulation		public function update(e : Event):void {			// step the world			world.Step(1 / 30, 10, 10);						world.ClearForces();						// add new sprites to the world			addNewSprites();			// update the sprites from the physics data			var Body:b2Body = world.GetBodyList();			for ( ; Body; Body = Body.GetNext()) {				if (Body.GetUserData() is Bitmap) {										// get the user date value from the body					var bitmap:Bitmap=Body.GetUserData() as Bitmap;										// extract the position and set the sprite to it					bitmap.x=Body.GetPosition().x*physicsData.ptm_ratio;					bitmap.y=Body.GetPosition().y*physicsData.ptm_ratio;										// set the rotation of the sprite					bitmap.rotation = Body.GetAngle() * (180/Math.PI);				}			}		}	}}